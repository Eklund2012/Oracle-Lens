1. Statistik & Visualisering
H√§mta spelarstatistik (KDA, winrate, champion-stats) och presentera den snyggt.
Generera diagram med t.ex. matplotlib eller plotly, och l√•t botten skicka bilder direkt i Discord.

2. Live-data & Notifieringar
L√•t botten bevaka en specifik spelare eller match.
Skicka automatiska notiser i Discord n√§r en match startar/slutar, eller n√§r en champion n√•r en viss winrate.

3. Databas-integration
Spara spelarprofiler i en databas (SQLite eller PostgreSQL).
M√∂jlighet f√∂r anv√§ndare att "registrera sig" i Discord-servern s√• att botten h√•ller koll p√• deras stats.

4. AI eller Machine Learning
G√∂r prediktioner: t.ex. gissa vinstchans baserat p√• champion picks.
Tr√§na en enkel ML-modell p√• historisk matchdata.

5. Webbgr√§nssnitt
Bygg en liten dashboard (Flask/FastAPI + React) som kopplar ihop med din bot.
T.ex. en sida d√§r man kan se sin senaste matchhistorik eller statistik √∂ver serverns spelare.

6. Polish f√∂r Portfolio
L√§gg projektet p√• GitHub med:
üìñ README (beskrivning, features, hur man k√∂r den sj√§lv).
üé• GIF eller screenshot p√• botten i action.
üöÄ Om m√∂jligt: en "deploy guide" s√• andra kan testa din bot.

Cacha match data champions skins icons
Replace prints with logging in riot_api.py
fallback img for profile pic

Log Level	Function	Description
DEBUG	logging.debug()	Provides detailed information that‚Äôs valuable to you as a developer.
INFO	logging.info()	Provides general information about what‚Äôs going on with your program.
WARNING	logging.warning()	Indicates that there‚Äôs something you should look into.
ERROR	logging.error()	Alerts you to an unexpected problem that‚Äôs occured in your program.
CRITICAL	logging.critical()	Tells you that a serious error has occurred and may have crashed your app.